@using TodoListApp.WebApi.Models.Tasks;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model TaskSearchViewModel
@section Styles {
    <link rel="stylesheet" type="text/css" href="~/css/searching.css?v=@DateTime.Now.Ticks" />
}
<div class="container">
<h2>Search Results for "@Model.SearchText"</h2>

<div class="search-container mb-4">
    <form asp-action="Search" method="get" class="search-form">
        <div class="input-group">
            <input type="text" name="searchText" value="@Model.SearchText" class="form-control search-input" placeholder="Search tasks by Title..." aria-label="Search tasks">
            <button class="btn btn-primary search-button" type="submit">
                    <ion-icon name="search-outline"></ion-icon>
            </button>
        </div>
    </form>
</div>

    @if (Model.SearchPerformed)
    {
        @if (Model.Tasks.Any())
        {
            <div class="task-list">
                @foreach (var task in Model.Tasks)
                {
                    <div class="task-item">
                        <h3 class="task-title">@task.Title</h3>
                        <p class="task-description">@task.Description</p>
                        <p class="task-due-date @(task.Status != Status.Completed && task.IsExpired ? "expired" : "")">Due date: @(task.DueDate?.ToString("dd MMMM, yyyy") ?? "N/A")</p>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                No results found for "@Model.SearchText".
            </div>
        }
    }
    @if (Model.TotalPages > 1)
    {
        <nav class="mt-5" aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link"
                   asp-controller="Task"
                   asp-action="Search"
                   asp-route-searchText="@Model.SearchText"
                   asp-route-pageNumber="@(Model.CurrentPage - 1)"
                   asp-route-itemsPerPage="@Model.ItemsPerPage">&laquo; Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link"
                   asp-controller="Task"
                   asp-action="Search"
                   asp-route-searchText="@Model.SearchText"
                   asp-route-pageNumber="@i"
                   asp-route-itemsPerPage="@Model.ItemsPerPage">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link"
                   asp-controller="Task"
                   asp-action="Search"
                   asp-route-searchText="@Model.SearchText"
                   asp-route-pageNumber="@(Model.CurrentPage + 1)"
                   asp-route-itemsPerPage="@Model.ItemsPerPage">Next &raquo;</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>